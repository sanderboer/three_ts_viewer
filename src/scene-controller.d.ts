import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import { CameraType, ViewportSide } from "./enums";
import { WebViewer } from "./webviewer";
export declare class SceneController {
    private webviewer;
    scene: THREE.Scene;
    controls: OrbitControls;
    camera: THREE.PerspectiveCamera | THREE.OrthographicCamera;
    persp_camera: THREE.PerspectiveCamera;
    ortho_camera: THREE.OrthographicCamera;
    canvas_width: number;
    canvas_height: number;
    client_width: number;
    client_height: number;
    viewport_left: number;
    viewport_yup: number;
    private side;
    constructor(webviewer: WebViewer, side: ViewportSide);
    dispose(): void;
    private add_orbit_controls;
    private orbiting_cb;
    add_perspective_camera(type?: CameraType): THREE.PerspectiveCamera;
    add_orthogonal_camera(): THREE.OrthographicCamera;
    render(): void;
    update_client_size(): void;
    update(): void;
    set_camera_aspect(): void;
    private set_lights;
    clearObject3d(object: THREE.Object3D | null): void;
    camera_fit(camera: THREE.PerspectiveCamera, obj: THREE.Object3D, offset: number, controls: OrbitControls): void;
    add_axes_helper(): void;
    add_grid_helper(size?: number): void;
    add_default_box(): void;
}
